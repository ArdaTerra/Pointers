Allocate memory in the heap using malloc

How to allocate memory for your own variables at runtime.

This is called dynamic memory allocation.

This will happen in a new location in memory named the heap.

So far, we've seen variables stored in a location named the stack.

This location is for so-called automatic duration

variables that come and go as functions or blocks are entered and exited.

As you know, automatically allocated variables only persist

during their own block or function.

Dynamically allocated memory, on the other hand,

is explicitly managed, so allocated and freed,

by the user from the so-called heap.

In c the function to ask from memory is called malloc,

as in memory allocation.

And is part of the standard library: stdlib.

So in order to be able to use this malloc function,

we need to #include this library.

So we type #include, and then it's stdlib.h, standard library.


#include <stdlib.h>
int main(void)
{
    int * intptr;
    double * doubleptr;
    intptr = (int *) malloc(sizeof(int));
    * intptr = 5;
    doubleptr = (double *) malloc(sizeof(double));
    * doubleptr = 9.0;
    return 0;
}
